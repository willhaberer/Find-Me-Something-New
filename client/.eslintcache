[{"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\index.js":"1","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\App.js":"2","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Home.js":"3","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\components\\Navbar.js":"4","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Spotify.js":"5","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Youtube.js":"6","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Soundcloud.js":"7","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\API.js":"8","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Login.js":"9","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\About.js":"10","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\auth.js":"11","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\mutations.js":"12","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Signup.js":"13","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Profile.js":"14","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\queries.js":"15","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\Seed.js":"16"},{"size":230,"mtime":1641585754879,"results":"17","hashOfConfig":"18"},{"size":2000,"mtime":1643663537577,"results":"19","hashOfConfig":"18"},{"size":690,"mtime":1642647700191,"results":"20","hashOfConfig":"18"},{"size":1795,"mtime":1643740166638,"results":"21","hashOfConfig":"18"},{"size":8952,"mtime":1643663537582,"results":"22","hashOfConfig":"18"},{"size":1772,"mtime":1643666453883,"results":"23","hashOfConfig":"18"},{"size":329,"mtime":1642458695556,"results":"24","hashOfConfig":"18"},{"size":2085,"mtime":1643673897488,"results":"25","hashOfConfig":"18"},{"size":2796,"mtime":1643663537579,"results":"26","hashOfConfig":"18"},{"size":436,"mtime":1642647700190,"results":"27","hashOfConfig":"18"},{"size":757,"mtime":1642647700197,"results":"28","hashOfConfig":"18"},{"size":1258,"mtime":1643739137152,"results":"29","hashOfConfig":"18"},{"size":1943,"mtime":1643663537581,"results":"30","hashOfConfig":"18"},{"size":4063,"mtime":1643740177850,"results":"31","hashOfConfig":"18"},{"size":200,"mtime":1643663537591,"results":"32","hashOfConfig":"18"},{"size":22741,"mtime":1643673897490,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"6kp6a",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\index.js",[],["68","69"],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\App.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Home.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\components\\Navbar.js",["70"],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Spotify.js",["71","72"],"import React, { useState } from \"react\";\r\nimport { getSpotifyToken, getRecTrack } from \"../utils/API\";\r\nimport \"../styles/Spotify.css\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { SAVE_SPOTIFY_SONG, UPDATE_SONGS_FOUND } from \"../utils/mutations\";\r\nimport { GET_ME } from \"../utils/queries\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nfunction Spotify() {\r\n  //useState\r\n  const [embedCode, setEmbedCode] = useState(\"initial\");\r\n  const [trackURL, setTrackURL] = useState(\"initial\");\r\n  const [trackPop, setTrackPop] = useState(\"initial\");\r\n  const [releaseDate, setReleaseDate] = useState(\"initial\");\r\n  const [currentSong, setCurrentSong] = useState({});\r\n  const [artist, setArtist] = useState(\"initial\");\r\n\r\n  //useMutation\r\n  const [saveSong] = useMutation(SAVE_SPOTIFY_SONG);\r\n  const [updateSongsFound] = useMutation(UPDATE_SONGS_FOUND);\r\n\r\n  const { data } = useQuery(GET_ME);\r\n\r\n  const handleGetSong = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (data) {\r\n      const userID = data.me._id;\r\n\r\n      try {\r\n        const { data } = await updateSongsFound({\r\n          variables: { userID },\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await getSpotifyToken();\r\n      const data = await response.json();\r\n      const token = data.access_token;\r\n      const pop = 18;\r\n\r\n      if (!token) {\r\n        throw new Error(\"no token!\");\r\n      }\r\n\r\n      const result = await getRecTrack(token, pop);\r\n      const trackData = await result.json();\r\n      console.log(trackData);\r\n      if (trackData.tracks.length === 0) {\r\n        handleGetSongPopTwenty();\r\n      } else {\r\n        const songData = {\r\n          artist: trackData.tracks[0].artists[0].name,\r\n          trackId: trackData.tracks[0].id,\r\n          link: trackData.tracks[0].external_urls.spotify,\r\n          title: trackData.tracks[0].name,\r\n        };\r\n\r\n        setTrackURL(songData.link);\r\n        setTrackPop(trackData.tracks[0].popularity);\r\n        setReleaseDate(trackData.tracks[0].album.release_date);\r\n        setArtist(songData.artist);\r\n\r\n        const inter =\r\n          \"https://open.spotify.com/embed/track/\" + songData.trackId;\r\n        setEmbedCode(inter);\r\n        setCurrentSong(songData);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleGetSongPopTwenty = async () => {\r\n    try {\r\n      const response = await getSpotifyToken();\r\n      const data = await response.json();\r\n      const token = data.access_token;\r\n      const pop = 20;\r\n\r\n      if (!token) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const result = await getRecTrack(token, pop);\r\n      const trackData = await result.json();\r\n      console.log(trackData);\r\n      if (trackData.tracks.length === 0) {\r\n        handleGetSongPopTwentyfive();\r\n      } else {\r\n        const songData = {\r\n          artist: trackData.tracks[0].artists[0].name,\r\n          trackId: trackData.tracks[0].id,\r\n          link: trackData.tracks[0].external_urls.spotify,\r\n          title: trackData.tracks[0].name,\r\n        };\r\n\r\n        setTrackURL(songData.link);\r\n        setTrackPop(trackData.tracks[0].popularity);\r\n        setReleaseDate(trackData.tracks[0].album.release_date);\r\n        const inter =\r\n          \"https://open.spotify.com/embed/track/\" + songData.trackId;\r\n        setEmbedCode(inter);\r\n        setCurrentSong(songData);\r\n        setArtist(songData.artist);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleGetSongPopTwentyfive = async () => {\r\n    try {\r\n      const response = await getSpotifyToken();\r\n      const data = await response.json();\r\n      const token = data.access_token;\r\n      const pop = 25;\r\n\r\n      if (!token) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const result = await getRecTrack(token, pop);\r\n      const trackData = await result.json();\r\n      console.log(trackData);\r\n      if (trackData.tracks.length === 0) {\r\n        handleGetSongPopThirty();\r\n      } else {\r\n        const songData = {\r\n          artist: trackData.tracks[0].artists[0].name,\r\n          trackId: trackData.tracks[0].id,\r\n          link: trackData.tracks[0].external_urls.spotify,\r\n          title: trackData.tracks[0].name,\r\n        };\r\n\r\n        setTrackURL(songData.link);\r\n        setTrackPop(trackData.tracks[0].popularity);\r\n        setReleaseDate(trackData.tracks[0].album.release_date);\r\n        const inter =\r\n          \"https://open.spotify.com/embed/track/\" + songData.trackId;\r\n        setEmbedCode(inter);\r\n        setCurrentSong(songData);\r\n        setArtist(songData.artist);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleGetSongPopThirty = async () => {\r\n    try {\r\n      const response = await getSpotifyToken();\r\n      const data = await response.json();\r\n      const token = data.access_token;\r\n      const pop = 30;\r\n\r\n      if (!token) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const result = await getRecTrack(token, pop);\r\n      const trackData = await result.json();\r\n      console.log(trackData);\r\n      if (trackData.tracks.length === 0) {\r\n        handleGetSongPopForty();\r\n      } else {\r\n        const songData = {\r\n          artist: trackData.tracks[0].artists[0].name,\r\n          trackId: trackData.tracks[0].id,\r\n          link: trackData.tracks[0].external_urls.spotify,\r\n          title: trackData.tracks[0].name,\r\n        };\r\n\r\n        setTrackURL(songData.link);\r\n        setTrackPop(trackData.tracks[0].popularity);\r\n        setReleaseDate(trackData.tracks[0].album.release_date);\r\n        const inter =\r\n          \"https://open.spotify.com/embed/track/\" + songData.trackId;\r\n        setEmbedCode(inter);\r\n        setCurrentSong(songData);\r\n        setArtist(songData.artist);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleGetSongPopForty = async () => {\r\n    try {\r\n      const response = await getSpotifyToken();\r\n      const data = await response.json();\r\n      const token = data.access_token;\r\n      const pop = 40;\r\n\r\n      if (!token) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const result = await getRecTrack(token, pop);\r\n      const trackData = await result.json();\r\n      console.log(trackData);\r\n      if (trackData.tracks.length === 0) {\r\n        console.log(\"nothing below pop 40\");\r\n      } else {\r\n        const songData = {\r\n          artist: trackData.tracks[0].artists[0].name,\r\n          trackId: trackData.tracks[0].id,\r\n          link: trackData.tracks[0].external_urls.spotify,\r\n          title: trackData.tracks[0].name,\r\n        };\r\n\r\n        setTrackURL(songData.link);\r\n        setTrackPop(trackData.tracks[0].popularity);\r\n        setReleaseDate(trackData.tracks[0].album.release_date);\r\n        const inter =\r\n          \"https://open.spotify.com/embed/track/\" + songData.trackId;\r\n        setEmbedCode(inter);\r\n        setCurrentSong(songData);\r\n        setArtist(songData.artist);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSaveSong = async () => {\r\n    console.log(embedCode);\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      alert(\"Must be Signed in to Save Songs!\");\r\n      return;\r\n    }\r\n    const spotifyTrackId = embedCode;\r\n    try {\r\n      const { data } = await saveSong({\r\n        variables: { spotifyTrackId },\r\n      });\r\n      console.log(data);\r\n      alert(\"Success Song Saved!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (embedCode === \"initial\") {\r\n    return (\r\n      <div id=\"container\">\r\n        <button id=\"songBtn\" className=\"bouncy\" onClick={handleGetSong}>\r\n          Get Song\r\n        </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div id=\"container\">\r\n        <button id=\"songBtn\" className=\"bouncy\" onClick={handleGetSong}>\r\n          New Song\r\n        </button>\r\n        <div id=\"songAndInfo\">\r\n          <iframe\r\n            src={embedCode}\r\n            title=\"songPlayer\"\r\n            width=\"300\"\r\n            height=\"380\"\r\n            frameBorder=\"0\"\r\n            allowtransparency=\"true\"\r\n            allow=\"encrypted-media\"\r\n            id=\"spotifyPlayer\"\r\n          ></iframe>\r\n          <div id=\"songInfo\">\r\n            <h2>Artist: {artist}</h2>\r\n            <h2>Popularity on Spotify: {trackPop}</h2>\r\n            <h4 id=\"subtext\">(Popularity is on a scale from 0-100)</h4>\r\n            <h2>Release Date: {releaseDate}</h2>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <a id=\"trackLink\" href={trackURL} target=\"_blank\" rel=\"noreferrer\">\r\n          Listen On Spotify\r\n        </a>\r\n\r\n        <button id=\"saveSongBtn\" className=\"bouncy\" onClick={handleSaveSong}>\r\n          Save Song to Profile\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spotify;\r\n","C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Youtube.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Soundcloud.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\API.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Login.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\About.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\auth.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\mutations.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Signup.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\pages\\Profile.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\queries.js",[],"C:\\Users\\willh\\Desktop\\Low-Streams\\client\\src\\utils\\Seed.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":63,"column":7,"nodeType":"79","endLine":63,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":16,"column":10,"nodeType":"82","messageId":"83","endLine":16,"endColumn":21},{"ruleId":"80","severity":1,"message":"84","line":32,"column":17,"nodeType":"82","messageId":"83","endLine":32,"endColumn":21},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'currentSong' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]